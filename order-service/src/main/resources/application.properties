spring.application.name=order-service
spring.datasource.url=jdbc:mysql://localhost:3308/order_service
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
server.port=8081
eureka.client.service-url.default-zone=http://eureka:password@localhost:8761/eureka
#product service on 8080

# actuator properties
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# resilience4j properties
# show state of circuit breaker open, closed, half open
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10

# to configure how many requests to wait for before changing state from CLOSED to OPEN
# count 5 requests that fail then change state
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5

resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50

# wait for 5s in open state before going to half open state
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s

# no of calls in half open state to check if communication works now
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
# if comm still fails, go to OPEN state
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true


# Resilience4j Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

# Resilience4j Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s